State 11 conflicts: 2 shift/reduce


Grammar

    0 $accept: Start $end

    1 Start: S

    2 S: if_exp '{' AE S AE '}'
    3  | if_exp '{' AE '}'

    4 if_exp: IF '(' EX ')'

    5 AE: ID '=' E ';' AE
    6   | AID ';' AE
    7   | %empty

    8 EX: E RE E

    9 X: ID
   10  | NUM

   11 E: E '-' E
   12  | '(' E ')'
   13  | E '+' E
   14  | E '*' E
   15  | E '/' E
   16  | E '%' E
   17  | AID

   18 AID: ID '+' '+'
   19    | '+' '+' ID
   20    | ID '-' '-'
   21    | '-' '-' ID
   22    | X


Terminals, with rules where they appear

    $end (0) 0
    '%' (37) 16
    '(' (40) 4 12
    ')' (41) 4 12
    '*' (42) 14
    '+' (43) 13 18 19
    '-' (45) 11 20 21
    '/' (47) 15
    ';' (59) 5 6
    '=' (61) 5
    '{' (123) 2 3
    '}' (125) 2 3
    error (256)
    IF (258) 4
    RE (259) 8
    ID (260) 5 9 18 19 20 21
    NUM (261) 10


Nonterminals, with rules where they appear

    $accept (18)
        on left: 0
    Start (19)
        on left: 1
        on right: 0
    S (20)
        on left: 2 3
        on right: 1 2
    if_exp (21)
        on left: 4
        on right: 2 3
    AE (22)
        on left: 5 6 7
        on right: 2 3 5 6
    EX (23)
        on left: 8
        on right: 4
    X (24)
        on left: 9 10
        on right: 22
    E (25)
        on left: 11 12 13 14 15 16 17
        on right: 5 8 11 12 13 14 15 16
    AID (26)
        on left: 18 19 20 21 22
        on right: 6 17


State 0

    0 $accept: . Start $end

    IF  shift, and go to state 1

    Start   go to state 2
    S       go to state 3
    if_exp  go to state 4


State 1

    4 if_exp: IF . '(' EX ')'

    '('  shift, and go to state 5


State 2

    0 $accept: Start . $end

    $end  shift, and go to state 6


State 3

    1 Start: S .

    $default  reduce using rule 1 (Start)


State 4

    2 S: if_exp . '{' AE S AE '}'
    3  | if_exp . '{' AE '}'

    '{'  shift, and go to state 7


State 5

    4 if_exp: IF '(' . EX ')'

    '('  shift, and go to state 8
    '+'  shift, and go to state 9
    '-'  shift, and go to state 10
    ID   shift, and go to state 11
    NUM  shift, and go to state 12

    EX   go to state 13
    X    go to state 14
    E    go to state 15
    AID  go to state 16


State 6

    0 $accept: Start $end .

    $default  accept


State 7

    2 S: if_exp '{' . AE S AE '}'
    3  | if_exp '{' . AE '}'

    '+'  shift, and go to state 9
    '-'  shift, and go to state 10
    ID   shift, and go to state 17
    NUM  shift, and go to state 12

    $default  reduce using rule 7 (AE)

    AE   go to state 18
    X    go to state 14
    AID  go to state 19


State 8

   12 E: '(' . E ')'

    '('  shift, and go to state 8
    '+'  shift, and go to state 9
    '-'  shift, and go to state 10
    ID   shift, and go to state 11
    NUM  shift, and go to state 12

    X    go to state 14
    E    go to state 20
    AID  go to state 16


State 9

   19 AID: '+' . '+' ID

    '+'  shift, and go to state 21


State 10

   21 AID: '-' . '-' ID

    '-'  shift, and go to state 22


State 11

    9 X: ID .
   18 AID: ID . '+' '+'
   20    | ID . '-' '-'

    '+'  shift, and go to state 23
    '-'  shift, and go to state 24

    '+'       [reduce using rule 9 (X)]
    '-'       [reduce using rule 9 (X)]
    $default  reduce using rule 9 (X)


State 12

   10 X: NUM .

    $default  reduce using rule 10 (X)


State 13

    4 if_exp: IF '(' EX . ')'

    ')'  shift, and go to state 25


State 14

   22 AID: X .

    $default  reduce using rule 22 (AID)


State 15

    8 EX: E . RE E
   11 E: E . '-' E
   13  | E . '+' E
   14  | E . '*' E
   15  | E . '/' E
   16  | E . '%' E

    '+'  shift, and go to state 26
    '-'  shift, and go to state 27
    '*'  shift, and go to state 28
    '/'  shift, and go to state 29
    '%'  shift, and go to state 30
    RE   shift, and go to state 31


State 16

   17 E: AID .

    $default  reduce using rule 17 (E)


State 17

    5 AE: ID . '=' E ';' AE
    9 X: ID .
   18 AID: ID . '+' '+'
   20    | ID . '-' '-'

    '+'  shift, and go to state 23
    '-'  shift, and go to state 24
    '='  shift, and go to state 32

    $default  reduce using rule 9 (X)


State 18

    2 S: if_exp '{' AE . S AE '}'
    3  | if_exp '{' AE . '}'

    '}'  shift, and go to state 33
    IF   shift, and go to state 1

    S       go to state 34
    if_exp  go to state 4


State 19

    6 AE: AID . ';' AE

    ';'  shift, and go to state 35


State 20

   11 E: E . '-' E
   12  | '(' E . ')'
   13  | E . '+' E
   14  | E . '*' E
   15  | E . '/' E
   16  | E . '%' E

    ')'  shift, and go to state 36
    '+'  shift, and go to state 26
    '-'  shift, and go to state 27
    '*'  shift, and go to state 28
    '/'  shift, and go to state 29
    '%'  shift, and go to state 30


State 21

   19 AID: '+' '+' . ID

    ID  shift, and go to state 37


State 22

   21 AID: '-' '-' . ID

    ID  shift, and go to state 38


State 23

   18 AID: ID '+' . '+'

    '+'  shift, and go to state 39


State 24

   20 AID: ID '-' . '-'

    '-'  shift, and go to state 40


State 25

    4 if_exp: IF '(' EX ')' .

    $default  reduce using rule 4 (if_exp)


State 26

   13 E: E '+' . E

    '('  shift, and go to state 8
    '+'  shift, and go to state 9
    '-'  shift, and go to state 10
    ID   shift, and go to state 11
    NUM  shift, and go to state 12

    X    go to state 14
    E    go to state 41
    AID  go to state 16


State 27

   11 E: E '-' . E

    '('  shift, and go to state 8
    '+'  shift, and go to state 9
    '-'  shift, and go to state 10
    ID   shift, and go to state 11
    NUM  shift, and go to state 12

    X    go to state 14
    E    go to state 42
    AID  go to state 16


State 28

   14 E: E '*' . E

    '('  shift, and go to state 8
    '+'  shift, and go to state 9
    '-'  shift, and go to state 10
    ID   shift, and go to state 11
    NUM  shift, and go to state 12

    X    go to state 14
    E    go to state 43
    AID  go to state 16


State 29

   15 E: E '/' . E

    '('  shift, and go to state 8
    '+'  shift, and go to state 9
    '-'  shift, and go to state 10
    ID   shift, and go to state 11
    NUM  shift, and go to state 12

    X    go to state 14
    E    go to state 44
    AID  go to state 16


State 30

   16 E: E '%' . E

    '('  shift, and go to state 8
    '+'  shift, and go to state 9
    '-'  shift, and go to state 10
    ID   shift, and go to state 11
    NUM  shift, and go to state 12

    X    go to state 14
    E    go to state 45
    AID  go to state 16


State 31

    8 EX: E RE . E

    '('  shift, and go to state 8
    '+'  shift, and go to state 9
    '-'  shift, and go to state 10
    ID   shift, and go to state 11
    NUM  shift, and go to state 12

    X    go to state 14
    E    go to state 46
    AID  go to state 16


State 32

    5 AE: ID '=' . E ';' AE

    '('  shift, and go to state 8
    '+'  shift, and go to state 9
    '-'  shift, and go to state 10
    ID   shift, and go to state 11
    NUM  shift, and go to state 12

    X    go to state 14
    E    go to state 47
    AID  go to state 16


State 33

    3 S: if_exp '{' AE '}' .

    $default  reduce using rule 3 (S)


State 34

    2 S: if_exp '{' AE S . AE '}'

    '+'  shift, and go to state 9
    '-'  shift, and go to state 10
    ID   shift, and go to state 17
    NUM  shift, and go to state 12

    $default  reduce using rule 7 (AE)

    AE   go to state 48
    X    go to state 14
    AID  go to state 19


State 35

    6 AE: AID ';' . AE

    '+'  shift, and go to state 9
    '-'  shift, and go to state 10
    ID   shift, and go to state 17
    NUM  shift, and go to state 12

    $default  reduce using rule 7 (AE)

    AE   go to state 49
    X    go to state 14
    AID  go to state 19


State 36

   12 E: '(' E ')' .

    $default  reduce using rule 12 (E)


State 37

   19 AID: '+' '+' ID .

    $default  reduce using rule 19 (AID)


State 38

   21 AID: '-' '-' ID .

    $default  reduce using rule 21 (AID)


State 39

   18 AID: ID '+' '+' .

    $default  reduce using rule 18 (AID)


State 40

   20 AID: ID '-' '-' .

    $default  reduce using rule 20 (AID)


State 41

   11 E: E . '-' E
   13  | E . '+' E
   13  | E '+' E .
   14  | E . '*' E
   15  | E . '/' E
   16  | E . '%' E

    '*'  shift, and go to state 28
    '/'  shift, and go to state 29
    '%'  shift, and go to state 30

    $default  reduce using rule 13 (E)


State 42

   11 E: E . '-' E
   11  | E '-' E .
   13  | E . '+' E
   14  | E . '*' E
   15  | E . '/' E
   16  | E . '%' E

    '*'  shift, and go to state 28
    '/'  shift, and go to state 29
    '%'  shift, and go to state 30

    $default  reduce using rule 11 (E)


State 43

   11 E: E . '-' E
   13  | E . '+' E
   14  | E . '*' E
   14  | E '*' E .
   15  | E . '/' E
   16  | E . '%' E

    '%'  shift, and go to state 30

    $default  reduce using rule 14 (E)


State 44

   11 E: E . '-' E
   13  | E . '+' E
   14  | E . '*' E
   15  | E . '/' E
   15  | E '/' E .
   16  | E . '%' E

    '%'  shift, and go to state 30

    $default  reduce using rule 15 (E)


State 45

   11 E: E . '-' E
   13  | E . '+' E
   14  | E . '*' E
   15  | E . '/' E
   16  | E . '%' E
   16  | E '%' E .

    $default  reduce using rule 16 (E)


State 46

    8 EX: E RE E .
   11 E: E . '-' E
   13  | E . '+' E
   14  | E . '*' E
   15  | E . '/' E
   16  | E . '%' E

    '+'  shift, and go to state 26
    '-'  shift, and go to state 27
    '*'  shift, and go to state 28
    '/'  shift, and go to state 29
    '%'  shift, and go to state 30

    $default  reduce using rule 8 (EX)


State 47

    5 AE: ID '=' E . ';' AE
   11 E: E . '-' E
   13  | E . '+' E
   14  | E . '*' E
   15  | E . '/' E
   16  | E . '%' E

    '+'  shift, and go to state 26
    '-'  shift, and go to state 27
    '*'  shift, and go to state 28
    '/'  shift, and go to state 29
    '%'  shift, and go to state 30
    ';'  shift, and go to state 50


State 48

    2 S: if_exp '{' AE S AE . '}'

    '}'  shift, and go to state 51


State 49

    6 AE: AID ';' AE .

    $default  reduce using rule 6 (AE)


State 50

    5 AE: ID '=' E ';' . AE

    '+'  shift, and go to state 9
    '-'  shift, and go to state 10
    ID   shift, and go to state 17
    NUM  shift, and go to state 12

    $default  reduce using rule 7 (AE)

    AE   go to state 52
    X    go to state 14
    AID  go to state 19


State 51

    2 S: if_exp '{' AE S AE '}' .

    $default  reduce using rule 2 (S)


State 52

    5 AE: ID '=' E ';' AE .

    $default  reduce using rule 5 (AE)
